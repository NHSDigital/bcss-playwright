import pytest
import logging
from playwright.sync_api import Page
from pages.base_page import BasePage
from pages.call_and_recall.call_and_recall_page import CallAndRecallPage
from pages.call_and_recall.invitations_monitoring_page import InvitationsMonitoringPage
from pages.call_and_recall.generate_invitations_page import GenerateInvitationsPage
from pages.call_and_recall.non_invitations_days_page import NonInvitationDaysPage
from pages.call_and_recall.invitations_plans_page import InvitationsPlansPage
from pages.call_and_recall.create_a_plan_page import CreateAPlanPage
from utils.user_tools import UserTools


@pytest.fixture(scope="function", autouse=True)
def before_each(page: Page):
    """
    Before every test is executed, this fixture logs in to BCSS as a test user and navigates to the call and recall page
    """
    # Log in to BCSS
    UserTools.user_login(page, "Hub Manager State Registered at BCS01")

    # Go to call and recall page
    BasePage(page).go_to_call_and_recall_page()


@pytest.mark.regression
@pytest.mark.call_and_recall
def test_add_then_delete_non_invitation_day(page: Page) -> None:
    """
    Verifies that a user can add and delete a non-invitation day.
    """
    CallAndRecallPage(page).go_to_non_invitation_days_page()

    NonInvitationDaysPage(page).enter_date("14/11/2030")
    NonInvitationDaysPage(page).enter_note(
        "Add a non-invitation day for automated test"
    )
    NonInvitationDaysPage(page).click_add_non_invitation_day_button()
    NonInvitationDaysPage(page).verify_date_is_visible("14/11/2030")

    NonInvitationDaysPage(page).click_delete_button("14/11/2030")
    NonInvitationDaysPage(page).confirm_delete_action()
    NonInvitationDaysPage(page).verify_date_is_not_visible("14/11/2030")

    # Scenario: Add then delete a non invitation day
    # Given I log in to BCSS "England" as user role "HubManagerAtBCS02"
    # And I go to "Non-Invitation Days"

    # # The date entered should be a week day, otherwise a warning message will pop up
    # When I enter "14/11/2030" in the input box with id "date"

    # # Add a new non invitation day
    # And I enter "Add a non invitation day for automated test" in the input box with id "note"
    # And I click the "Add Non-Invitation Day" button
    # Then the text "14/11/2030" is visible

    # # Delete the non invitation day using delete button whose element id happens to contain date information
    # When I click the element with id "actionButton14/11/2030"
    # And I press OK on my confirmation prompt
    # Then the text "14/11/2030" is not visible


@pytest.mark.regression
@pytest.mark.call_and_recall
def test_non_invitation_day_note_required(page: Page) -> None:
    """
    Verifies that a note is required when adding a non-invitation day.
    """
    CallAndRecallPage(page).go_to_non_invitation_days_page()

    NonInvitationDaysPage(page).enter_date("14/11/2030")
    NonInvitationDaysPage(page).click_add_non_invitation_day_button()

    NonInvitationDaysPage(page).verify_alert_message_contains(
        "The Note field is mandatory"
    )

# Scenario: Non invitation day note is compulsory
#     Given I log in to BCSS "England" as user role "HubManagerAtBCS02"
#     And I go to "Non-Invitation Days"
#     When I enter "14/11/2030" in the input box with id "date"
#     And I click the "Add Non-Invitation Day" button
#     Then I get an alert message that "contains" "The Note field is mandatory"
